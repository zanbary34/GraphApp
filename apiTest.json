{
  "info": {
    "name": "GraphController API Tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Create Node with Dynamic Edges",
      "request": {
        "method": "POST",
        "header": [],
        "url": {
          "raw": "http://localhost:5199/api/graph/create",
          "protocol": "http",
          "host": ["localhost"],
          "port": "5199",
          "path": ["api", "graph", "create"]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"{{uniqueNodeName}}\",\n  \"targetNodeIds\": {{targetNodeIds}}\n}"
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "// Generate a unique node name",
              "pm.environment.set(\"uniqueNodeName\", \"Node_\" + Date.now());",
              "",
              "// Generate random target node IDs between 1 and 100",
              "const targetNodeIds = Array.from({ length: 2 }, () => Math.floor(Math.random() * 100) + 1);",
              "pm.environment.set(\"targetNodeIds\", JSON.stringify(targetNodeIds));"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Extract node ID after creation to use in subsequent requests",
              "const responseData = pm.response.json();",
              "if (responseData && responseData.id) {",
              "    pm.environment.set(\"createdNodeId\", responseData.id);",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Update Node with New Dynamic Edges",
      "request": {
        "method": "PUT",
        "header": [],
        "url": {
          "raw": "http://localhost:5199/api/graph/update",
          "protocol": "http",
          "host": ["localhost"],
          "port": "5199",
          "path": ["api", "graph", "update"]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"{{uniqueNodeName}}\",\n  \"newName\": \"{{uniqueNodeName}}_Updated\",\n  \"newTargetNodeIds\": {{newTargetNodeIds}}\n}"
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "// Generate a new set of random target node IDs for update",
              "const newTargetNodeIds = Array.from({ length: 2 }, () => Math.floor(Math.random() * 100) + 1);",
              "pm.environment.set(\"newTargetNodeIds\", JSON.stringify(newTargetNodeIds));"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get Node by Name",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:5199/api/graph/{{uniqueNodeName}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "5199",
          "path": ["api", "graph", "{{uniqueNodeName}}"]
        }
      }
    },
    {
      "name": "Delete Node",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "http://localhost:5199/api/graph/delete",
          "protocol": "http",
          "host": ["localhost"],
          "port": "5199",
          "path": ["api", "graph", "delete"]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"{{uniqueNodeName}}_Updated\"\n}"
        }
      }
    }
  ]
}
